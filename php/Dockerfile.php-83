# dockerized drupal development box
# includes apache, php, xhprof, imagemagick, sshd and drush
# No mysql, use a dedicated mysql-docker-image and link the container.
#
# VERSION               php-83
# DOCKER-VERSION        2

FROM debian:bookworm as builder 

ENV SQL_LITE_VERSION=sqlite-autoconf-3490100
# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
# Update package list and install prerequisites
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    wget \
    libreadline-dev \
    zlib1g-dev

WORKDIR /tmp

# Download SQLite source code
RUN wget https://www.sqlite.org/2025/$SQL_LITE_VERSION.tar.gz && \
    tar xzf $SQL_LITE_VERSION.tar.gz && \
    rm $SQL_LITE_VERSION.tar.gz

# Build SQLite
WORKDIR $SQL_LITE_VERSION
RUN ./configure && \
    make 

FROM    debian:bookworm
ENV SQL_LITE_VERSION=sqlite-autoconf-3490100

LABEL org.opencontainers.image.authors="stephan@factorial.io"

RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -sf /bin/true /sbin/initctl

RUN export DEBIAN_FRONTEND=noninteractive && apt-get update --fix-missing && apt-get -y -q install git default-mysql-client wget optipng pngquant webp jpegoptim apt-transport-https lsb-release ca-certificates sqlite3

# Prepare php8.1
RUN /usr/bin/wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
RUN echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list

RUN export DEBIAN_FRONTEND=noninteractive && apt-get update --fix-missing && apt-get -y -q install rsync unzip apache2 pwgen python3-pip vim-tiny openssh-server cron vim curl graphviz make imagemagick libapache2-mod-php8.3 php8.3-mysql php8.3-curl php8.3-memcache php8.3-redis php8.3-mbstring php8.3-zip php8.3-gd php8.3-dom php8.3-xml php8.3-bcmath php8.3-soap php8.3-sqlite3 php8.3-apcu php8.3-intl

# composer and drush
RUN curl -ss https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer
RUN mkdir -p /.cache && chmod -R 777 /.cache
RUN /usr/local/bin/composer global require "drush/drush:^10"
RUN sed -i '1i export PATH="$HOME/.config/composer/vendor/bin:$PATH"' /root/.bashrc


# drupal 11 sqlite

COPY --from=builder /tmp/$SQL_LITE_VERSION /tmp/$SQL_LITE_VERSION
RUN cd /tmp/$SQL_LITE_VERSION && make install && rm -rf /tmp/$SQL_LITE_VERSION

# sshd
RUN DEBIAN_FRONTEND=noninteractive apt-get autoclean
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
RUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config
RUN mkdir /var/run/sshd
RUN echo 'root:root' |chpasswd

# configure apache
RUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
RUN a2enmod rewrite vhost_alias

RUN pip3 install supervisor --break-system-packages
ADD ./common/start.sh /start.sh
ADD ./common/foreground.sh /etc/apache2/foreground.sh
ADD ./common/apache-vhost.conf /etc/apache2/sites-available/000-default.conf
ADD ./common/supervisord.conf /etc/supervisord.conf
ADD ./php-83/php.ini /etc/php/8.1/apache2/php.ini
ADD ./php-83/php_cli.ini /etc/php/8.1/cli/php.ini
ADD ./php-83/phpsendmail /usr/local/bin/phpsendmail
RUN chmod +x /usr/local/bin/phpsendmail
RUN touch /var/log/mail_php.log
RUN chmod 777 /var/log/mail_php.log
RUN touch /var/log/php_errors.log
RUN chmod 777 /var/log/php_errors.log

RUN chmod 755 /start.sh /etc/apache2/foreground.sh
EXPOSE 80
CMD ["/bin/bash", "/start.sh"]
